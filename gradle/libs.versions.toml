[versions]
agp = "8.2.2"
koinCore = "3.6.0-wasm-alpha2"
koin-compose = "1.0.4"
kotlin = "1.9.20"
compose = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
compose-plugin = "1.5.11"
ktor = "2.3.9"
coroutines = "1.8.1-Beta"
kotlinx-serialization = "1.6.3"
moko = "0.23.0"
skiko = "0.7.93"
composeImageLoader = "1.7.0"
kamelImage = "0.9.4" ## KAMEL IMAGE BERMASALAH DI ANDROID VS IOS
voyager = "1.0.0"
localStorageMultiplatform = "1.1.1"
androidx-appcompat = "1.6.1"
compose-uitooling = "1.5.4"
compose-compiler = "1.5.4"
kotlinx-datetime = "0.4.1"
kvault = "1.10.0"
seiko = "1.5.1"
desugar_jdk_libs = "2.0.3"
napier = "2.7.1"
camera = "1.3.3"
diglolEncoding = "0.3.0"

[libraries]
# android core
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# camera core
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }

# compose core
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

# koin (dependency injection)
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinCore"}
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose"  }

# (logger)
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

# ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# kotlin core
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-serialization = {module = "io.ktor:ktor-serialization-kotlinx-json", version.ref="ktor"}
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# kamel (image async)
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "seiko" }

# multiplatform setting (local storage)
local-storage-multi-platform = { module = "com.russhwolf:multiplatform-settings", version.ref = "localStorageMultiplatform" }
local-storage-multi-platform-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "localStorageMultiplatform"}
kvault-storage = { module = "com.liftric:kvault", version.ref = "kvault" }

# moko (resource path)
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }

# lib window manager for multi platform windows
skiko = { module = "org.jetbrains.skiko:skiko", version.ref = "skiko" }

# encoding
encoding-utils = { module = "com.diglol.encoding:encoding", version.ref = "diglolEncoding"}

# voyager (navigation)
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-tab = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transition = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-screenmodel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager"}

desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }